version: '3.8'

services:

  web:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
      - qdrant

    environment:
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - QDRANT_HOST=${QDRANT_HOST}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - ./logs:/app/logs  # Mount logs directory for Promtail
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://host.docker.internal:8080/up || exit 1" ]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 10s

  db:
    image: postgres:13
    ports:
      - '0.0.0.0:5432:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s


  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # Prometheus metrics
    environment:
      - QDRANT__TELEMETRY_DISABLED=true
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
      - QDRANT__SERVICE__READ_ONLY_API_KEY=${QDRANT_API_READONLY_KEY}
    volumes:
      - qdrant_storage:/qdrant/storage



volumes:
  postgres_data:
  qdrant_storage:
